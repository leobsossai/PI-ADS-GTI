/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import DAO.ContaReceberDAO;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;
import model.ContaReceber;
/**
 *
 * @author ls
 */
public class cadastroReceber extends javax.swing.JFrame {

    /**
     * Creates new form cadastroReceber
     */
    private void formatarCampo() {
        try {
            MaskFormatter mask = new MaskFormatter("##/##/##");
            mask.install(receberDataInput);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null,"Erro ao formatar campo de texto","ERRO",JOptionPane.ERROR);
        }
    }
    
    public cadastroReceber() {
        initComponents();
        formatarCampo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        receberTitulo = new javax.swing.JLabel();
        receberValor = new javax.swing.JLabel();
        receberBtnConfirma = new javax.swing.JButton();
        receberValorInput = new javax.swing.JTextField();
        receberBtnLimpar = new javax.swing.JButton();
        receberTipo = new javax.swing.JLabel();
        receberTipoCombo = new javax.swing.JComboBox<>();
        receberPagador = new javax.swing.JLabel();
        receberBeneficiarioInput = new javax.swing.JTextField();
        receberData = new javax.swing.JLabel();
        receberDataInput = new javax.swing.JFormattedTextField();
        receberRecorrencia = new javax.swing.JLabel();
        receberNome = new javax.swing.JLabel();
        receberRecorrenciaCombo = new javax.swing.JComboBox<>();
        receberNomeInput = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        receberTitulo.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        receberTitulo.setText("CADASTRO - CONTA A RECEBER");

        receberValor.setText("Valor R$");

        receberBtnConfirma.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        receberBtnConfirma.setText("Cadastrar");
        receberBtnConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receberBtnConfirmaActionPerformed(evt);
            }
        });

        receberValorInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receberValorInputActionPerformed(evt);
            }
        });
        receberValorInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                receberValorInputKeyPressed(evt);
            }
        });

        receberBtnLimpar.setText("limpar");
        receberBtnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receberBtnLimparActionPerformed(evt);
            }
        });

        receberTipo.setText("Tipo de conta");

        receberTipoCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Variável", "Fixa" }));
        receberTipoCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receberTipoComboActionPerformed(evt);
            }
        });

        receberPagador.setText("Pagador");

        receberData.setText("Data pagamento");

        receberDataInput.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yy"))));
        receberDataInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                receberDataInputFocusLost(evt);
            }
        });
        receberDataInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                receberDataInputKeyPressed(evt);
            }
        });

        receberRecorrencia.setText("Recorrência");

        receberNome.setText("Identificação da conta");

        receberRecorrenciaCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Única", "Semanal", "Mensal", "Anual" }));

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(receberNome)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(receberNomeInput)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(receberValor)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(receberValorInput, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(receberData)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(receberDataInput, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(receberRecorrencia)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(receberRecorrenciaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(receberTipo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(receberTipoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(receberPagador)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(receberBeneficiarioInput, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)))
                                .addGap(6, 6, 6)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(receberTitulo)
                        .addGap(126, 126, 126))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(btnVoltar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(receberBtnLimpar)
                .addGap(18, 18, 18)
                .addComponent(receberBtnConfirma, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(166, 166, 166))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(receberTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receberNome)
                    .addComponent(receberNomeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(receberValor)
                    .addComponent(receberValorInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receberTipo)
                    .addComponent(receberTipoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(receberPagador)
                    .addComponent(receberBeneficiarioInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receberData)
                    .addComponent(receberDataInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(receberRecorrencia)
                    .addComponent(receberRecorrenciaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receberBtnConfirma, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(receberBtnLimpar)
                    .addComponent(btnVoltar))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void receberBtnConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receberBtnConfirmaActionPerformed
        // TODO add your handling code here:
        // Botão para cadastrar a conta a receber e enviá-la para o banco de dados
        // colocar os valores de todos os campos em variáveis
        String tipoReceber = receberTipoCombo.getSelectedItem().toString();
        String recorrenciaReceber = receberRecorrenciaCombo.getSelectedItem().toString();
        String nomeReceber = receberNomeInput.getText();
        float valorReceber = Float.parseFloat(receberValorInput.getText());
        String beneficiarioReceber = receberBeneficiarioInput.getText();
        String dataReceber = receberDataInput.getText();
        // criar uma instancia da classe ContaReceber com os valores de cada variável
        ContaReceber receber = new ContaReceber();
        receber.setIdentificacao_da_conta(nomeReceber);
        receber.setValor(valorReceber);
        receber.setTipo_de_conta(tipoReceber);
        receber.setPagador(beneficiarioReceber);
        receber.setRecorrencia(recorrenciaReceber);
        receber.setData_pagamento(dataReceber);
        // inserir as informações do formulário no banco de dados através do DAO
        ContaReceberDAO receberDAO = new ContaReceberDAO();
        receberDAO.inserir(receber);
        // limpar os campos do formulário após o cadastro
        receberNomeInput.setText("");
        receberValorInput.setText("");
        receberBeneficiarioInput.setText("");
        //receberDataInput.setText("");
        formatarCampo();
    }//GEN-LAST:event_receberBtnConfirmaActionPerformed

    private void receberValorInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receberValorInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_receberValorInputActionPerformed

    private void receberBtnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receberBtnLimparActionPerformed
        // TODO add your handling code here:
        receberNomeInput.setText("");
        receberValorInput.setText("");
        receberBeneficiarioInput.setText("");
        //receberDataInput.setText("");
        formatarCampo();
    }//GEN-LAST:event_receberBtnLimparActionPerformed

    private void receberTipoComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receberTipoComboActionPerformed
        // TODO add our handling code here:
    }//GEN-LAST:event_receberTipoComboActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        telaInicial frame = new telaInicial();
        frame.setVisible(true);
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void receberValorInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_receberValorInputKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)) {
            receberValorInput.setEditable(false);
        } else {
            receberValorInput.setEditable(true);
        }
    }//GEN-LAST:event_receberValorInputKeyPressed

    private void receberDataInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_receberDataInputKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            receberDataInput.setEditable(false);
        } else {
            receberDataInput.setEditable(true);
        }
    }//GEN-LAST:event_receberDataInputKeyPressed

    private void receberDataInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_receberDataInputFocusLost
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yy");
        try {
            java.util.Date date = sdf.parse(receberDataInput.getText());
            receberDataInput.setValue(sdf.format(date));
        } catch (ParseException e) {
            receberDataInput.setFocusLostBehavior(JFormattedTextField.PERSIST);
            receberDataInput.setText("");
            receberDataInput.setValue(null);
        }
    }//GEN-LAST:event_receberDataInputFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cadastroReceber.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cadastroReceber.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cadastroReceber.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cadastroReceber.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cadastroReceber().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVoltar;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField receberBeneficiarioInput;
    private javax.swing.JButton receberBtnConfirma;
    private javax.swing.JButton receberBtnLimpar;
    private javax.swing.JLabel receberData;
    private javax.swing.JFormattedTextField receberDataInput;
    private javax.swing.JLabel receberNome;
    private javax.swing.JTextField receberNomeInput;
    private javax.swing.JLabel receberPagador;
    private javax.swing.JLabel receberRecorrencia;
    private javax.swing.JComboBox<String> receberRecorrenciaCombo;
    private javax.swing.JLabel receberTipo;
    private javax.swing.JComboBox<String> receberTipoCombo;
    private javax.swing.JLabel receberTitulo;
    private javax.swing.JLabel receberValor;
    private javax.swing.JTextField receberValorInput;
    // End of variables declaration//GEN-END:variables
}
