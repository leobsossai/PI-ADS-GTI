/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import DAO.ContaPagarDAO;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;
import model.ContaPagar;

/**
 *
 * @author ls
 */
public class cadastroPagar extends javax.swing.JFrame {

    /**
     * Creates new form cadastroPagar
     */
    private void formatarCampo() {
        try {
            MaskFormatter mask = new MaskFormatter("##/##/##");
            mask.install(pagarDataInput);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null,"Erro ao formatar campo de texto","ERRO",JOptionPane.ERROR);
        }
    }
    public cadastroPagar() {
        initComponents();
        formatarCampo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        pagarTitulo = new javax.swing.JLabel();
        pagarNome = new javax.swing.JLabel();
        pagarNomeInput = new javax.swing.JTextField();
        pagarValor = new javax.swing.JLabel();
        pagarValorInput = new javax.swing.JTextField();
        pagarTipo = new javax.swing.JLabel();
        pagarTipoCombo = new javax.swing.JComboBox<>();
        pagarBeneficiario = new javax.swing.JLabel();
        pagarBeneficiarioInput = new javax.swing.JTextField();
        pagarData = new javax.swing.JLabel();
        pagarDataInput = new javax.swing.JFormattedTextField();
        pagarRecorrencia = new javax.swing.JLabel();
        pagarRecorrenciaCombo = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        pagarBtnConfirma = new javax.swing.JButton();
        pagarBtnLimpar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pagarTitulo.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        pagarTitulo.setText("CADASTRO - CONTA A PAGAR");

        pagarNome.setText("Identificação da conta");

        pagarNomeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagarNomeInputActionPerformed(evt);
            }
        });

        pagarValor.setText("Valor R$");

        pagarValorInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagarValorInputActionPerformed(evt);
            }
        });
        pagarValorInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pagarValorInputKeyPressed(evt);
            }
        });

        pagarTipo.setText("Tipo de conta");

        pagarTipoCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Variável", "Fixa" }));
        pagarTipoCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagarTipoComboActionPerformed(evt);
            }
        });

        pagarBeneficiario.setText("Beneficiário / Fornecedor");

        pagarData.setText("Data pagamento");

        pagarDataInput.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yy"))));
        pagarDataInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pagarDataInputFocusLost(evt);
            }
        });
        pagarDataInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagarDataInputActionPerformed(evt);
            }
        });
        pagarDataInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pagarDataInputKeyPressed(evt);
            }
        });

        pagarRecorrencia.setText("Recorrência");

        pagarRecorrenciaCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Única", "Semanal", "Mensal", "Anual" }));
        pagarRecorrenciaCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagarRecorrenciaComboActionPerformed(evt);
            }
        });

        pagarBtnConfirma.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        pagarBtnConfirma.setText("Cadastrar");
        pagarBtnConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagarBtnConfirmaActionPerformed(evt);
            }
        });

        pagarBtnLimpar.setText("limpar");
        pagarBtnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagarBtnLimparActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pagarData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pagarDataInput, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(pagarRecorrencia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pagarRecorrenciaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 111, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pagarNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pagarNomeInput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pagarValor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pagarValorInput, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(pagarTipo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pagarTipoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(pagarBeneficiario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pagarBeneficiarioInput)))
                .addGap(12, 12, 12))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pagarTitulo)
                .addGap(143, 143, 143))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(btnVoltar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pagarBtnLimpar)
                .addGap(18, 18, 18)
                .addComponent(pagarBtnConfirma, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pagarTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pagarNome)
                    .addComponent(pagarNomeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pagarValor)
                    .addComponent(pagarValorInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pagarTipo)
                    .addComponent(pagarTipoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pagarBeneficiario)
                    .addComponent(pagarBeneficiarioInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pagarData)
                    .addComponent(pagarDataInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pagarRecorrencia)
                    .addComponent(pagarRecorrenciaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pagarBtnConfirma, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pagarBtnLimpar)
                    .addComponent(btnVoltar))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void pagarTipoComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagarTipoComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pagarTipoComboActionPerformed

    private void pagarBtnConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagarBtnConfirmaActionPerformed
        // TODO add your handling code here:
        // Botão para cadastrar a conta a pagar e enviá-la para o banco de dados
        // colocar os valores de todos os campos em variáveis
        String tipoPagar = pagarTipoCombo.getSelectedItem().toString();
        String recorrenciaPagar = pagarRecorrenciaCombo.getSelectedItem().toString();
        String nomePagar = pagarNomeInput.getText();
        float valorPagar = Float.parseFloat(pagarValorInput.getText());
        String beneficiarioPagar = pagarBeneficiarioInput.getText();
        String dataPagar = pagarDataInput.getText();
        // criar uma instancia da classe ContaPagar com os valores de cada variável
        ContaPagar pagar = new ContaPagar();
        pagar.setIdentificacao_da_conta(nomePagar);
        pagar.setValor(valorPagar);
        pagar.setTipo_de_conta(tipoPagar);
        pagar.setFornecedor_ou_beneficiario(beneficiarioPagar);
        pagar.setRecorrencia(recorrenciaPagar);
        pagar.setData_pagamento(dataPagar);
        // inserir as informações do formulário no banco de dados através do DAO
        ContaPagarDAO pagarDAO = new ContaPagarDAO();
        pagarDAO.inserir(pagar);
        // limpar os campos do formulário após o cadastro
        pagarNomeInput.setText("");
        pagarValorInput.setText("");
        pagarBeneficiarioInput.setText("");
        pagarDataInput.setText("");
        formatarCampo();
        
    }//GEN-LAST:event_pagarBtnConfirmaActionPerformed

    private void pagarBtnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagarBtnLimparActionPerformed
        // TODO add your handling code here:
        // Botão para limpar o formulário
        pagarNomeInput.setText("");
        pagarValorInput.setText("");
        pagarBeneficiarioInput.setText("");
        pagarDataInput.setText("");
        formatarCampo();
    }//GEN-LAST:event_pagarBtnLimparActionPerformed

    private void pagarNomeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagarNomeInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pagarNomeInputActionPerformed

    private void pagarRecorrenciaComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagarRecorrenciaComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pagarRecorrenciaComboActionPerformed

    private void pagarDataInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagarDataInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pagarDataInputActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        telaInicial frame = new telaInicial();
        frame.setVisible(true);
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void pagarValorInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagarValorInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pagarValorInputActionPerformed

    private void pagarDataInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pagarDataInputFocusLost
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yy");
        try {
            java.util.Date date = sdf.parse(pagarDataInput.getText());
            pagarDataInput.setValue(sdf.format(date));
        } catch (ParseException e) {
            pagarDataInput.setFocusLostBehavior(JFormattedTextField.PERSIST);
            pagarDataInput.setText("");
            pagarDataInput.setValue(null);
        }
    }//GEN-LAST:event_pagarDataInputFocusLost

    private void pagarValorInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pagarValorInputKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            //nao pode digitar um caracter que nao seja numero
            pagarValorInput.setEditable(false);
        }else {
            pagarValorInput.setEditable(true);
        }
    }//GEN-LAST:event_pagarValorInputKeyPressed

    private void pagarDataInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pagarDataInputKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            pagarDataInput.setEditable(false);
        } else {
            pagarDataInput.setEditable(true);
        }
    }//GEN-LAST:event_pagarDataInputKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cadastroPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cadastroPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cadastroPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cadastroPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cadastroPagar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVoltar;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel pagarBeneficiario;
    private javax.swing.JTextField pagarBeneficiarioInput;
    private javax.swing.JButton pagarBtnConfirma;
    private javax.swing.JButton pagarBtnLimpar;
    private javax.swing.JLabel pagarData;
    private javax.swing.JFormattedTextField pagarDataInput;
    private javax.swing.JLabel pagarNome;
    private javax.swing.JTextField pagarNomeInput;
    private javax.swing.JLabel pagarRecorrencia;
    private javax.swing.JComboBox<String> pagarRecorrenciaCombo;
    private javax.swing.JLabel pagarTipo;
    private javax.swing.JComboBox<String> pagarTipoCombo;
    private javax.swing.JLabel pagarTitulo;
    private javax.swing.JLabel pagarValor;
    private javax.swing.JTextField pagarValorInput;
    // End of variables declaration//GEN-END:variables
}
